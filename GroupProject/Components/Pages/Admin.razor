@page "/admin"
@rendermode InteractiveServer
@using GroupProject.Components.Services
@inject UserState UserState
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject ICookieService CookieService

<PageTitle>Admin Dashboard</PageTitle>

@if (isLoading)
{
    <div class="text-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else if (!string.IsNullOrEmpty(userRole) && userRole.ToLower() == "employee")
{
    <h1>Admin Dashboard</h1>
    <div class="row">
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Manage Inventory</h5>
                    <p class="card-text">Add, edit, or remove products from the store.</p>
                    <button class="btn btn-primary">Manage Inventory</button>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">View Orders</h5>
                    <p class="card-text">View and manage customer orders.</p>
                    <button class="btn btn-primary">View Orders</button>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">User Management</h5>
                    <p class="card-text">Manage user accounts and permissions.</p>
                    <button class="btn btn-primary">Manage Users</button>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-danger">
        You do not have permission to access this page.
    </div>
}

@code {
    private string userRole = "";
    private bool isFirstRender = true;
    private bool isLoading = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                userRole = await CookieService.GetCookieAsync("user_role");
                await JSRuntime.InvokeVoidAsync("console.log", "Admin - Role from cookie:", userRole);

                if (string.IsNullOrEmpty(userRole) || userRole.ToLower() != "employee")
                {
                    NavigationManager.NavigateTo("/");
                }
                else
                {
                    isFirstRender = false;
                    isLoading = false;
                    StateHasChanged();
                }
            }
            catch (Exception ex)
            {
                await JSRuntime.InvokeVoidAsync("console.log", "Admin - Error:", ex.Message);
                isLoading = false;
                StateHasChanged();
            }
        }
    }
} 