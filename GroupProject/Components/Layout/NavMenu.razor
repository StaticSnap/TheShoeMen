@using GroupProject.Components.Services
@implements IDisposable
@inject UserState UserState
@inject ICookieService CookieService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">TheShoeMen</a>
        @if (!string.IsNullOrEmpty(username))
        {
            <span class="navbar-text text-light">
                Welcome, @username! (@userRole)
                <button class="btn btn-link text-light" @onclick="HandleLogout">Logout</button>
            </span>
        }
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" @onchange="HandleToggle" />

<div class="nav-scrollable">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All" @onclick="HandleNavClick">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        @if (string.IsNullOrEmpty(username))
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login" @onclick="HandleNavClick">
                    <span class="bi bi-box-arrow-in-right-nav-menu" aria-hidden="true"></span> Log in
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="createAccount" @onclick="HandleNavClick">
                    <span class="bi bi-person-plus-fill-nav-menu" aria-hidden="true"></span> Create Account
                </NavLink>
            </div>
        }

        @if (!string.IsNullOrEmpty(username))
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Shop" @onclick="HandleNavClick">
                    <span class="bi bi-shop-nav-menu" aria-hidden="true"></span> Shop
                </NavLink>
            </div>
        }

        @if (!string.IsNullOrEmpty(userRole) && userRole.ToLower() == "employee")
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="admin" @onclick="HandleNavClick">
                    <span class="bi bi-gear-fill-nav-menu" aria-hidden="true"></span> Admin Dashboard
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool isFirstRender = true;
    private string username = "";
    private string userRole = "";

    protected override void OnInitialized()
    {
        UserState.OnChange += HandleUserStateChange;
    }

    private async void HandleUserStateChange()
    {
        await CheckCookies();
        StateHasChanged();
    }

    private async Task CheckCookies()
    {
        username = await CookieService.GetCookieAsync("username");
        userRole = await CookieService.GetCookieAsync("user_role");
        await JSRuntime.InvokeVoidAsync("console.log", "NavMenu - Cookies checked:", username, userRole);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await CheckCookies();
            if (!string.IsNullOrEmpty(username))
            {
                UserState.SetUser(username, userRole ?? "customer");
            }
            isFirstRender = false;
            StateHasChanged();
        }
    }

    private async Task HandleLogout()
    {
        await CookieService.DeleteCookieAsync("username");
        await CookieService.DeleteCookieAsync("user_role");
        username = "";
        userRole = "";
        UserState.ClearUser();
        NavigationManager.NavigateTo("/");
    }

    private async Task HandleToggle(ChangeEventArgs e)
    {
        var isChecked = (bool)e.Value;
        await JSRuntime.InvokeVoidAsync("toggleNavMenu", isChecked);
    }

    private async Task HandleNavClick()
    {
        await JSRuntime.InvokeVoidAsync("toggleNavMenu", false);
    }

    public void Dispose()
    {
        UserState.OnChange -= HandleUserStateChange;
    }
}

